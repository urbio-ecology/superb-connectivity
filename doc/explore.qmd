---
title: "Brief Exploration of results"
author: "Nicholas Tierney"
date: "`r format(Sys.time(), '%d %B, %Y')`"
format: html
---

```{r}
#| label: setup
#| include: false
knitr::opts_chunk$set(echo = TRUE)
## target knits qmds in their own session, so load libraries here.
source(here::here("packages.R"))
tar_source()  # not always necessary
```

```{r}
#| label: load-targets
#| include: false
withr::with_dir(here::here(), {
tar_load(habitat)
tar_load(barrier)
tar_load(habitat_raster)
tar_load(barrier_raster)
tar_load(terra_areas_connected)
tar_load(results_connect_habitat)
})
```

## Exploration

```{r}
#| label: plot-raster
plot(habitat_raster, col = "forestgreen")
plot(barrier_raster)
```

Explore results

```{r}
#| label: display-areas
terra_areas_connected |> 
  mutate(across(starts_with("area"), \(x) round(x, 3))) |> 
  datatable()
```

```{r}
#| label: display-connectivity
terra_areas_connected |> 
  mutate(across(where(is.numeric), \(x) round(x, 6))) |> 
  pivot_longer(
    cols = everything(),
    names_to = "Variable",
    values_to = "Value"
  ) |> 
  datatable()
```

```{r}
results_connect_habitat |> datatable()
```


## Running time

It is useful to understand how long the pipeline takes, let's take a look at the timing of some key targets

```{r}
#| label: running-time
target_timings <- tar_meta() |> dplyr::select(name, bytes, seconds)

target_timings |> 
  drop_na() |> 
  arrange(desc(seconds)) |> 
  mutate(
    bytes_pretty = prettyunits::pretty_bytes(bytes),
    .after = bytes
  ) |> 
  rename(
    target_name = name,
    runtime_seconds = seconds
  ) |> 
  datatable()

# target_timings |> 
#   filter(
#     name %in% c(
#       "vect_areas_connected",
#       "terra_areas_connected"
#     )
#   )
```


## Reproducibility

<details><summary>Reproducibility receipt</summary>

```{r}
## datetime
Sys.time()

## repository
if(requireNamespace('git2r', quietly = TRUE)) {
  git2r::repository()
} else {
  c(
    system2("git", args = c("log", "--name-status", "-1"), stdout = TRUE),
    system2("git", args = c("remote", "-v"), stdout = TRUE)
  )
}

## session info
sessionInfo()
```

</details>
